Changelog
=========

0.12.0 (2016-10-17)
-------------------

- Fix help subcommand.
- Remove compatibility hacks causing issues with newer GitPython.
- Check valid import branch argument value.
- Report import branch name used by default.
- Use tag for import branch naming when given.
- Use python for pre/post scripts.
- Support tags for input args.
- Allow SHA1 as reference for inputs.
- Fix finish merge to ensure correct contents.
- Always have rebase perform finish.
- Ensure correct mode of git-rebase executed.
- Support old GitPython transform_kwargs signature.
- Refactor test to allow additional.
- Ensure parent options retained for exec'ed finish.
- Fix access for pre-script dict member.
- Update .gitignore with .eggs path for setuptools.
- Enable default GIT_PYTHON_TRACE for tests.
- Consolidate to a single separator character.
- Fix broken interactive mode to be usable.
- Record upstream branch in import merge commit.
- Handle all local changes landed upstream.
- Detect cherry-picked changes without Change-Id.
- Example in USAGE.md should reference .gitreview.
- Use a recent pbr.
- Add tool to recreate git repo from test scenarios.
- Detect when nothing to import.
- Merge multiple unrelated additional branches.
- Support for python 3.
- Show rebase help during interactive import.
- Simplify USAGE.md example by using a local remote.
- Fix / simplify the example patch in USAGE.md.
- Minor change to the USAGE.md.
- Handle missing merge during initial import.
- Include parent commits in git graph.
- Update package author/maintainer details.
- Match name and result of is_detached() method.
- Install coverage and fix command line to call.
- Refactor import command tests to use scenarios.
- Consolidate note reference and header constants.
- Consolidate BadName exception compatibility.
- Keep modifications to GitPython objects in single module.
- Support test specific scripts to modify test areas.
- Ensure end of arguments marked clearly.
- Fix a tiny typo in USAGE.


0.11.0 (2016-02-08)
-------------------

- Changelog for 0.11.0 Release.
- Fix order of commits from previous imports.
- Ask rev-parse for shortest unique SHA1.
- Remove upstream branch requirement from '--finish'
- Move logging setup earlier.
- Support a finalize method for argument parsing.
- Convert strategy tests to use scenarios.
- Have pbr update AUTHORS but not changelog.
- Fix manpage building.
- Remove '\' from multiline strings.
- Improve detection of the previous import merge.
- Begin conversion to testscenarios.
- Include node 'name' in commit subject.
- Update typos.
- Add more complex usage summary for import command.
- Tidy up fixture usage.
- Use standard library for text generation.
- Update ChangeLog with missing releases.
- Capture log messages for test failures.
- Add option to perform finish only.
- Allow direct execution of main module.
- Tests: Switch to use list as stack.
- Grammar fixes.
- Change repository from stackforge to openstack.
- Update .gitreview for new namespace.
- Update the read-tree command in USAGE.md.
- Re-factor and split code.
- Restructure subcommands parser creation.
- Mask broken versions of mock.
- Update hacking, enable some checks and fix style issues.
- Sample jobs for mirroring upstream repositories.
- Find additional missing commit scenarios.
- Use DFS reverse topological sort to allow unordered inputs.
- Make function private and replace boolean with function result.
- Catch BadName exceptions from newer GitPython.
- Additional scenarios that result in missed commits.
- Add test for obsolete approach to track upstream.
- Refactor code used to build tree into helpers.
- Add test support for creating carried changes.
- Include graph of git log and node info on error.
- Workflow documentation is now in infra-manual.
- Fix typo.


0.10.1 (2014-11-18)
-------------------

- Blacklist broken GitPython release 0.3.2.


0.10.0 (2014-10-17)
-------------------

- Add support and CLI option to search multiple refs for last import.
- Basic tests for import and fix for additional branches.
- Separate out main to make testing easier.
- Ensure tree is walked when ordering commits.
- Add searcher test to find commits when switching branches.
- Standardize imports.
- Let read-tree update index and tree.
- Find commits when parent is before import merge.
- Pick up versioning using pkg_resources or pbr.
- Enable operating on patches with unicode chars in subject lines.
- Wrap markdown documentation to 80 characters.
- Remove ignored PEP8 rule E125 from tox.ini.
- Fix typo in tests/base.py.
- Remove dependency on GitPython from setuptools usage.
- Add initial tests for strategies and searchers.
- Rename doc environment to docs.
- Remove unneeded console script.
- Correcting usage docs on branch name.
- Include creation of branch and provide name in docs.
- Add missing git statement from USAGE.md.
- Updating documentation with the new repository address.
- Update .gitreview file to use stackforge/git-upstream.
- Better workaround for the known issue about missing commits.
- Add a brief and clear description of git-upstream main usecase.
- Add "What git-upstream is not" section to README.md.
- Add PyPI installation documentation.
- Update git-upstream documentation.


0.9.0 (2014-07-23)
------------------

- Add AUTHORS and ChangeLog files.
- Add KNOWN-ISSUES.md file.
- General documentation improvements.
- Update tests to create isolate git repo.
- Ensure GitPython is present for setup.
- Pep8 and whitespace fixups.
- Fix "'return' outside function" error.
- Remove superfluous doc in the main module.
- Fix a typo in rebaseeditor comment.
- Fix README extension also adding a proper description file.
- Remove remaining HP references.
- Add git-upstream documentation.
- Use GitPython version_info.
- Fix test_lesser_minor unit test.
- Add acknowledges file.
- Rename generate man page command.
- Install bash completion calls.
- Move tests under module.
- Make unittests work with testr.
- Fixed pep8 errors.
- Prepared for upstream integration.
- Rename bash completion script.
- Fix dependencies and build-time commands.
- Update .gitreview.
- Rename hpgit to git-upstream, also changing its license.
- Fix filtering regex for superseded commits.
- Add drop and supersede commands.
- Fix hpgit wrong assumption about upstream branches.
- Allow running of a set of functional tests.
- Fix .gitignore.
- Fix simple_rebase functional test.
- Add functional test framework and some basic tests.
- Add generated hpgit.1 file to .gitignore.
- Avoid importing main during hpgit installation.
- Add setup.cfg.
- Add a check for git version.
- Add ‘dry-run’ command.
- Add commands and log unit tests based on python testtools.
- Improve .gitignore.
- Install rebase-editor.py as a script.
- Fix crash when there are no local changes.
- Fix a crash if there is no commit to be processed.
- Autogenerate man pages for hpgit subcommands.
- Fixes crash if no merge-base commit is found.
- Fixes 'setup doesn't install rebase-editor.py'
- Make the arcomplete package optional.
- Add bash autocomplete code.
- Add missing dependency (GitPython).
- Force string representation of active_branch property.
- Ensure editor can be a multi arg command.
- Line up logging output.
- Implement basic finish functionality.
- Include missing build dependency.
- Fixes for debian packaging.
- Add support for latest GitPython.
- Rename CommitSHA1Filter as a Transform.
- Process filter generators once.
- Add filter to discard duplicate changes based on Gerrit Change-Ids.
- Create version file dynamically based on tags.
- Linearise the the commit history before rebasing.
- Catch missing previous import and trying to extend list with NoneType.
- Apply changes using custom rebase editor.
- Include additional branches in import branch name.
- Move branch reset code to separate method.
- Minor correction to log message.
- Add fallback describe.
- Provide better error if tool run outside of a git directory.
- Add warning message if additional branches are being dropped.
- Remove incorrect reference to args no longer available.
- Create and add default strategy to list commits.
- Searchers and filters to locate and process commits.
- Check for 'detached' state and invalid branches passed.
- Correctly init classes in MRO.
- Fix message when branch cannot be found.
- Convert similar decorators into single decorate that accepts an
  argument.
- Support aliased logging levels.
- Move git related properties into a mixin.
- Ensure argument defined for use with log message.
- Remove unused methods or raise exceptions.
- Insert correct copyright and licenses.
- Create a logging mixin class that auto dedents log messages.
- Use logging for output to stdout, stderr and log files.
- Inherit from object class to enable property decorator to function.
- Reduce line lengths and standarize function descriptions.
- Add missing global and fix incorrect exception.
- Rewrite import-upstream subcommand opts/args.
- Add initial subcommand for creating import branches.
- Add framework code for subcommand support.
- Add ignores for python byte-compiled files and pkg files.
- Initial packaging.
- Initial hpgit python project.
- Add README file for project.
- Initialise project with .gitreview file.

